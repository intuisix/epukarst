{% extends 'base.html.twig' %}

{% form_theme form _self %}

{% block title %}
    Relevés
{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.5.1/dist/leaflet.css"
    integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ=="
    crossorigin=""/>
{% endblock %}

{% block body %}
    <div class="row no-gutters flex-nowrap">
        {# Afficher un volet de filtres #}
        <div class="col py-3 px-3" style="max-width: 400px">
            <h5>Filtre</h5>

            {{form_start(form)}}

            {# Afficher une vue hiérarchique des systèmes, bassins et
            stations combinant les trois formulaires en un seul, grâce à
            une programmation manuelle. La division est limitée en hauteur
            et l'utilisateur a la possibilité de la redimensionner et d'en
            faire défiler le contenu. #}
            <div class="alert bg-light mb-3" style="overflow-y: scroll; height: 500px; resize: vertical" id="filter_stations">
                {% for system in systems %}
                    {% if is_granted("SYSTEM_OBSERVER", system) %}
                        <div>
                            <div class="form-check">
                                <input type="checkbox" name="filter[systems][]" id="filter_systems_{{system.id}}" class="form-check-input" value="{{system.id}}" {% if system in form.vars.data.systems %}checked="checked"{% endif %} />
                                <label for="filter_systems_{{system.id}}" class="form-check-label">
                                    <strong>{{system.name}}</strong>
                                </label>
                                {% if 0 %}
                                    <span class="badge badge-secondary float-right">{{system.code}}</span>
                                {% endif %}
                            </div>
                            {% for basin in system.basins %}
                                <div class="ml-4">
                                    <div class="form-check">
                                        <input type="checkbox" name="filter[basins][]" id="filter_basins_{{basin.id}}" class="form-check-input" value="{{basin.id}}" {% if basin in form.vars.data.basins %}checked="checked"{% endif %} />
                                        <label for="filter_basins_{{basin.id}}" class="form-check-label">
                                            {{basin.name}}
                                        </label>
                                        {% if 0 %}
                                            <span class="badge badge-secondary  float-right">{{basin.code}}</span>
                                        {% endif %}
                                    </div>
                                    {% for station in basin.stations %}
                                        <div class="ml-4">
                                            <div class="form-check">
                                                <input type="checkbox" id="filter_stations_{{station.id}}" class="form-check-input" name="filter[stations][]" value="{{station.id}}" {% if station in form.vars.data.stations %}checked="checked"{% endif %} />
                                                <label class="form-check-label" for="filter_stations_{{station.id}}">
                                                    <em>{{station.name}}</em>
                                                </label>
                                                {% if 0 %}
                                                    <span class="badge badge-secondary float-right">{{station.code}}</span>
                                                {% endif %}
                                            </div>
                                        </div>
                                    {% endfor %}
                                </div>
                            {% endfor %}
                        </div>
                    {% endif %}
                {% endfor %}

                {# Inclure les lignes de formulaires relatifs aux systèmes
                par souci de complétude, même si ces formulaires sont
                volontairement bridés #}
                {{form_row(form.systems)}}
                {{form_row(form.basins)}}
                {{form_row(form.stations)}}
            </div>

            {# Afficher les champs de date minimum et de date maximum #}
            <div class="alert form-group bg-light">
                <div class="form-row">
                    <div class="col">
                        {{form_row(form.minimumDate)}}
                    </div>
                    <div class="col">
                        {{form_row(form.maximumDate)}}
                    </div>
                </div>
            </div>

            {# Afficher les cases à cocher d'état #}
            <div class="alert form-group bg-light">
                <div class="row">
                    <div class="col">
                        {{form_row(form.validated)}}
                    </div>
                    <div class="col">
                        {{form_row(form.invalidated)}}
                    </div>
                    <div class="col">
                        {{form_row(form.submitted)}}
                    </div>
                </div>
            </div>

            {# Bouton permettant d'ajouter un paramètre #}
            <button type="button" data-action="add-measure" data-toggle="tooltip" data-placement="top" data-html="true" title="La liste filtrée montrera les relevés dont <strong>au moins</strong> un paramètre correspond aux critères." class="btn btn-secondary mb-3">
                <i class="fas fa-plus"></i> Ajouter un paramètre
            </button>

            {# Afficher les sous-formulaires pour les mesures #}
            {{form_row(form.measures)}}

            {# Bouton pour appliquer le filtre #}
            <button type="submit" class="btn btn-success float-right">
                <i class="fas fa-filter"></i>
                Appliquer le filtre
            </button>

            {{form_end(form)}}
        </div>
        <div class="col">
            {# Afficher la carte des relevés #}
            <div id="map" style="height: 300px" hidden="hidden">Carte</div>

            {# Afficher la liste des relevés, sous forme de table liée au
            système de pagination qui suit #}
            <form class="my-3" method="POST" id="readings">
                <table width="100%" class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th width="10"><input type="checkbox"/></th>
                            <th width="100">Relevé</th>
                            <th width="200">Système<br><em>Station</em></th>
                            {% for parameter in parameters %}
                                <td style="text-align: center">
                                    <strong>{{parameter.name}}</strong>
                                    {% if parameter.unit %}
                                        <br>
                                        {{parameter.unit}}
                                    {% endif %}
                                </td>
                            {% endfor %}
                            <th>Validé</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for reading in pagination.data %}
                            <tr>
                                <td>
                                    <input type="checkbox" name="readings[{{reading.code}}]"/>
                                </td>
                                <td>
                                    <a href="{{path('reading_show', {'code': reading.code })}}">
                                        {{reading.fieldDateTime|date('d/m/Y')}}
                                        <br>
                                        <span class="badge badge-secondary">{{reading.code}}</span>
                                    </a>
                                </td>
                                <td>
                                    {{reading.station.basin.system.name}}
                                    <br>
                                    <em>{{reading.station.name}}</em>
                                </td>
                                {% for parameter in parameters %}
                                    <td style="text-align: right">
                                        {% include 'reading/_measure_stat.html.twig' with {'stats': reading.valueStats(parameter)} %}
                                    </td>
                                {% endfor %}
                                <td style="text-align:center">
                                    {% include 'reading/_reading_state.html.twig' with {'validated': reading.validated} %}
                                </td>
                                <td>
                                    {% if is_granted('SYSTEM_OBSERVER', reading) %}
                                        <a href="{{path('reading_show', {'code': reading.code })}}"><i class="fas fa-eye"></i></a>
                                    {% endif %}
                                    {% if is_granted('SYSTEM_CONTRIBUTOR', reading) %}
                                        <a href="{{path('reading_modify', {'code': reading.code})}}"><i class="fas fa-edit text-primary"></i></a>
                                    {% endif %}
                                    {% if is_granted('SYSTEM_MANAGER', reading)%}
                                        <a href="{{path('reading_validate', {'code': reading.code})}}"><i class="fas fa-flag-checkered text-success"></i></a>
                                    {% endif %}
                                    {% if is_granted('SYSTEM_MANAGER', reading) %}
                                        <a href="{{path('reading_delete', {'code': reading.code})}}"><i class="fas fa-trash text-danger"></i></a>
                                    {% endif %}
                                </td>
                            </tr>
                        {% else %}
                            <tr>
                                <td colspan="100">
                                    <em>Il n'y a pas de relevés à afficher&nbsp;: vérifiez si les filtres sélectionnent au moins une station et s'ils ne sont pas trop restrictifs.</em>
                                </td>
                            </tr>
                        {% endfor %}
                    </tbody>
                </table>

                {# Composant de pagination #}
                {{pagination.display}}

                {# Bouton à menu déroulant permettant d'encoder un relevé, pour chaque système #}
                {% if is_granted('SYSTEM_CONTRIBUTOR') %}
                    <button id="btnGroupDrop1" type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <fa class="fas fa-plus"></fa> Encoder un relevé de système
                    </button>
                    <div class="dropdown-menu" aria-labelledby="btnGroupDrop1">
                        {% for system in systems %}
                            {% if is_granted('SYSTEM_CONTRIBUTOR', system) %}
                                <a class="dropdown-item" href="{{path('system_reading_encode', {'code': system.code})}}">{{system.name}}</a>
                            {% endif %}
                        {% endfor %}
                    </div>
                {% endif %}

                {# Bouton permettant d'encoder un relevé de sation #}
                {% if is_granted('SYSTEM_CONTRIBUTOR') %}
                    <a class="btn btn-secondary" href="{{path('reading_encode')}}" role="button"><fa class="fas fa-plus"></fa> Encoder un relevé de station</a>
                {% endif %}

                {# Bouton permettant d'exporter les relevés #}
                {% if is_granted('SYSTEM_MANAGER') %}
                    <button type="submit" class="btn btn-secondary" formaction="{{path('reading_export')}}"><i class="fas fa-file-excel"></i> Exporter les relevés sélectionnés</button>
                {% endif %}
            </form>
        </div>
    </div>
{% endblock %}

{% block _filter_systems_row %}
    {# Ce bloc de formulaire relatif aux systèmes est vide car le bloc
    principal affiche manuellement les éléments de formulaire sous forme
    hérarchie des systèmes, bassins et stations. #}
{% endblock %}

{% block _filter_basins_row %}
    {# Ce bloc de formulaire relatif aux bassins est vide car le bloc principal
    affiche manuellement les éléments de formulaire sous forme hérarchie des
    systèmes, bassins et stations. #}
{% endblock %}

{% block _filter_stations_row %}
    {# Ce bloc de formulaire relatif aux stations est vide car le bloc
    principal affiche manuellement les éléments de formulaire sous forme
    hérarchie des systèmes, bassins et stations. #}
{% endblock %}

{% block _filter_measures_label %}
{% endblock %}

{% block _filter_measures_widget %}
    {# Afficher le widget Twig #}
    {{form_widget(form)}}
{% endblock %}

{% block _filter_measures_entry_row %}
    {# N'afficher que le widget, sans étiquette ou autre information #}
    {{form_widget(form)}}
{% endblock %}

{% block _filter_measures_entry_widget %}
    {# Cette division identifie le code HTML qui concerne le paramètre #}
    <div class="alert bg-light" id="{{id}}">
        {# Afficher, seul sur une ligne, la sélection de paramètre #}
        <div class="form-row">
            <div class="col">
                {{form_row(form.parameter)}}
            </div>
        </div>
        {# Afficher côte à côte les champs de valeur minimum et maximum #}
        <div class="form-row">
            <div class="col">
                {{form_row(form.minimumValue)}}
            </div>
            <div class="col">
                {{form_row(form.maximumValue)}}
            </div>
        </div>

        {# Afficher un bouton permettant de supprimer le paramètre #}
        <button type="button" data-action="delete-measure" data-target="#{{id}}" class="btn btn-danger">
            <i class="fas fa-trash"></i> Supprimer ce paramètre
        </button>
    </div>
{% endblock %}

{% block javascripts %}
{% if 0 %} {# Code à réactiver lorsque la cartographie sera mise en oeuvre #}
    <script src="https://unpkg.com/leaflet@1.5.1/dist/leaflet.js"
    integrity="sha512-GffPMF3RvMeYyc1LWMHtK8EbPv0iNZ8/oTtHPx9/cc2ILxQ+u905qIwdpULaqDkyBKgOaB57QTMg7ztg8Jm2Og=="
    crossorigin=""></script>

    <script>
        var mymap = L.map('map').setView([50.200, 4.8667], 8);

{% if 0 %}
{# Cette branche doit être réactivée et complétée avec les clés d'API à demander à MapBox (ou un autre fournisseur) #}
        L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
            maxZoom: 18,
            id: 'mapbox.streets',
            accessToken: 'your.mapbox.access.token'
        }).addTo(mymap);
{% else %}
    /* TODO: This is temporary code, which will be replaced with the correcly licensed maps. */
	L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {
		maxZoom: 18,
		attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, ' +
			'<a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
			'Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
		id: 'mapbox.streets'
	}).addTo(mymap);
{% endif %}
    </script>
{% endif %}

    <script>
        {# Faire en sorte que si l'utilisateur change l'état d'un élément de la
        vue hiérarchique, ce changement soit propagé à tous les éléments qu'il
        contient. Notez que les éléments terminaux, qui ne contiennent donc
        aucun élément, sont concernés aussi par l'écoute des changements par
        souci d'homogénéité et d'évolutivité. #}
        $('#filter_stations input[type="checkbox"]').click(function() {
            var checked = $(this).prop('checked');
            $(this).parent().parent().find('input[type="checkbox"]').prop('checked', checked);
        });
    </script>

    <script src="/js/collection.js"></script>
    <script>
        $(document).ready(function() {
            var measuresCollectionResponders =
                createCollectionResponders(
                    '#filter_measures',
                    'button[data-action="add-measure"]',
                    'button[data-action="delete-measure"]'
                );
            measuresCollectionResponders();
        });
    </script>

    <script>
        {# Activer les tooltips #}
        $(function () {
            $('[data-toggle="tooltip"]').tooltip()
        })
    </script>

    <script>
        {# Répliquer l'état de la case à cocher globale de la liste relevés sur celle des relevés individuels #}
        $('#readings thead input[type="checkbox"]').click(function() {
            var checked = $(this).prop('checked');
            $('#readings tbody input[type="checkbox"]').prop('checked', checked);
        });
    </script>

{% endblock %}
